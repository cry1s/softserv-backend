version: "3"
volumes:
  postgresdb-data:
  minio-data:
  redis-data:
services:
  server:
    build:
      context: .
      target: final
    ports:
      - "8080:8080"
    depends_on:
      - db
      - minio
    environment:
      - DATABASE_URL=${DATABASE_URL}
  db:
    image: postgres:16-alpine
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - type: volume
        source: postgresdb-data
        target: /var/lib/postgresql/data
  adminer:
    image: adminer:latest
    ports:
      - "5000:8080"
    depends_on:
      - db
  minio:
    image: minio/minio
    ports:
      - "9000:9000"
    volumes:
      - minio-data:/data
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    command: server --console-address ":9001" /data
  createbuckets:
    image: minio/mc
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set myminio http://minio:9000 $MINIO_ROOT_USER $MINIO_ROOT_PASSWORD;
      /usr/bin/mc mb myminio/bucket;
      /usr/bin/mc anonymous set public myminio/bucket;
      exit 0;
      "
  redis:
    image: redis:alpine
    volumes:
      - redis-data:/data
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
